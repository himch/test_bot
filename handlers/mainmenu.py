from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text
from datetime import datetime
from pydub import AudioSegment

from config import ADMIN_ID
from dbase import add_media
from face_recognizer import get_faces_images
from keyboards import main_menu_keyboard, search_btn, last5_btn, all_btn, next_btn, about_btn
from media import search, print_search_result
from messages import messages
from misc import dp, bot
from utils import get_user_data, print_user, send_info_to_managers


#######################################################################################################################
# general commands
#######################################################################################################################

@dp.message_handler(commands="start", state="*")
@dp.message_handler(Text(equals="—Å—Ç–∞—Ä—Ç", ignore_case=True), state="*")
async def cmd_start(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        await get_user_data(data, message)
        media = types.InputFile('start_pic.jpg')
        await message.answer_photo(media, reply_markup=main_menu_keyboard)
        await message.answer(messages["start_message"].replace("[user]", message.from_user.username),
                             reply_markup=main_menu_keyboard)

        await send_info_to_managers(bot, "–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å " + await print_user(data['db_tgid']))
        await state.set_state(None)


@dp.message_handler(commands="about", state="*")
@dp.message_handler(Text(startswith=about_btn, ignore_case=True), state="*")
async def cmd_about(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        await get_user_data(data, message)
        await message.answer(messages["about_message"].replace("[user]", message.from_user.username)
                             + await print_user(ADMIN_ID),
                             reply_markup=main_menu_keyboard)
        await state.set_state(None)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏—Å–ª–∞–Ω–Ω–æ–π –∫–∞—Ä—Ç–∏–Ω–∫–∏
@dp.message_handler(content_types=['photo'])
async def handle_docs_photo(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        await get_user_data(data, message)
        now = str(datetime.now()).translate(str.maketrans({' ': '_', ':': '-', '.': '_'}))
        image_filename = "files/" + now + ".jpg"
        await message.photo[-1].download(image_filename)
        faces_images = await get_faces_images(image_filename)

        if len(faces_images) > 0:
            await add_media(data['db_tgid'], image_filename, 'image')
            st = "üëå –ö–∞—Ä—Ç–∏–Ω–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –ë–î –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è " + str(data['db_tgid'])
        else:
            st = "–õ–∏—Ü–∞ –∏—â—É—Ç—Å—è –º–µ—Ç–æ–¥–æ–º –∫–∞—Å–∫–∞–¥–æ–≤ –•–∞–∞—Ä–∞, –±—É–¥—å —Å–Ω–∏—Å—Ö–æ–¥–∏—Ç–µ–ª–µ–Ω –Ω–∞ —Å–ª—É—á–∞–π –æ—à–∏–±–∫–∏, –ø–æ-–±—Ä–∞—Ç—Å–∫–∏, –∞?\n\n" \
                 "üòû –ö–∞—Ä—Ç–∏–Ω–∫–∞ –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞"

        await message.answer("–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –ª–∏—Ü: " + str(len(faces_images)) + "\n\n" + st)
        await state.set_state(None)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏—Å–ª–∞–Ω–Ω–æ–≥–æ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ
@dp.message_handler(content_types=['voice'])
async def handle_docs_voice(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        await get_user_data(data, message)
        now = str(datetime.now()).translate(str.maketrans({' ': '_', ':': '-', '.': '_'}))
        ogg_voice_filename = "files/" + now + ".ogg"
        wav_voice_filename = "files/" + now + ".wav"

        voice = await message.voice.get_file()
        await bot.download_file(voice.file_path, ogg_voice_filename)

        sound = AudioSegment.from_ogg(ogg_voice_filename)
        sound = sound.set_frame_rate(16000)
        sound.export(wav_voice_filename, format="wav")

        await add_media(data['db_tgid'], wav_voice_filename, 'voice')
        await message.answer_document(types.InputFile(wav_voice_filename),
                                      caption="üëå –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ wav 16kHz "
                                              "—Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ –ë–î –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è " + str(data['db_tgid']))
        await state.set_state(None)


# –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5
@dp.message_handler(commands=['last5'], state="*")
@dp.message_handler(Text(startswith=last5_btn, ignore_case=True), state="*")
async def cmd_last5(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        await get_user_data(data, message)
        data["offset"] = 0
        await search(data, message, method="last5", offset=data["offset"])
        await print_search_result(data, message, method="last5")


# –°–ª–µ–¥—É—é—â–∏–µ
@dp.message_handler(commands=['next'], state="*")
@dp.message_handler(Text(startswith=next_btn, ignore_case=True), state="*")
async def cmd_next(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        await get_user_data(data, message)
        if "offset" in data:
            data["offset"] += 5
        else:
            data["offset"] = 0
        await search(data, message, method="last5", offset=data["offset"])
        await print_search_result(data, message, method="last5")


# –í—Å–µ
@dp.message_handler(commands=['all'], state="*")
@dp.message_handler(Text(startswith=all_btn, ignore_case=True), state="*")
async def cmd_all(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        await get_user_data(data, message)
        await search(data, message, method="all")
        await print_search_result(data, message, method="all")


# –ü–æ–∏—Å–∫ –ø–æ–¥—Å–∫–∞–∑–∫–∞
@dp.message_handler(commands=['search'], state="*")
@dp.message_handler(Text(startswith=search_btn, ignore_case=True), state="*")
async def cmd_search(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        await get_user_data(data, message)
        await message.answer("üîé –î–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –≤–≤–µ–¥–∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
                             reply_markup=main_menu_keyboard)


# –ü–æ–∏—Å–∫
@dp.message_handler(content_types=types.ContentTypes.TEXT)
async def line_search(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        await get_user_data(data, message)
        await search(data, message, method="search")
        await print_search_result(data, message, method="search")
        await state.set_state(None)


#####################################################################################################################
# –û—Ç–º–µ–Ω–∞
@dp.message_handler(commands=['cancel'], state="*")
# @dp.message_handler(Text(startswith=cancel_btn, ignore_case=True), state="*")
async def cancel_cmd(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        await message.answer("–û—Ç–º–µ–Ω–µ–Ω–æ")
        await state.set_state(None)
